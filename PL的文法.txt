Pl/0语言文法的BNF表示：
〈程序〉→〈分程序>.
〈分程序〉→ [<常量说明部分>][<变量说明部分>][<过程说明部分>]〈语句〉
 <常量说明部分> → CONST<常量定义>{ ,<常量定义>}；
 <常量定义> → <标识符>=<无符号整数>
 <无符号整数> → <数字>{<数字>}
 <变量说明部分> → VAR<标识符>{ ,<标识符>}；
 <标识符> → <字母>{<字母>|<数字>}
 <过程说明部分> → <过程首部><分程序>；{<过程说明部分>}
 <过程首部> → procedure<标识符>；
 <语句> → <赋值语句>|<条件语句>|<当型循环语句>|<过程调用语句>|<读语句>|<写语句>|<复合语句>|<空>
 <赋值语句> → <标识符>:=<表达式>
 <复合语句> → begin<语句>{ ；<语句>}<end>
 <条件> → <表达式><关系运算符><表达式>|odd<表达式>
 <表达式> → [+|-]<项>{<加减运算符><项>}
 <项> → <因子>{<乘除运算符><因子>}
 <因子> → <标识符>|<无符号整数>|(<表达式>)
 <加减运符> → +|-
 <乘除运算符> → *|/
 <关系运算符> → =|#|<|<=|>|>=
 <条件语句> → if<条件>then<语句>
 <过程调用语句> → call<标识符>
 <当型循环语句> → while<条件>do<语句>
 <读语句> → read(<标识符>{ ，<标识符>})
 <写语句> → write(<标识符>{，<标识符>})
 <字母> → a|b|c…x|y|z
 <数字> → 0|1|2…7|8|9

文法解读

--------------------
整个程序
    一个完整的PL/0程序的末尾有且必须有一个句点
    程序的末尾是且只能是一条语句????,(只不过可以是复合语句)
    可以想到,赋值语句和空语句作为

标识符
    字母数字的任意序列,且
    必须以字母开头,且
    没有限制长度

数据类型只有一种:无符号整数,没有所谓的字符和字符串
    常量也只有一种:无符号整数

语句
    分类
        语句分为:赋值,条件,循环,调用,读,写,复合 七种
    赋值语句
        赋值语句的右侧只能是算数表达式,不能是函数调用
    复合语句
        一条复合语句由一对begin和 end 关键字及其之间的多条语句组成,
        因为语句可以为空,所以,依顺序出现的 begin end 关键字也是一条复合语句

    语句的结束
        语句不需要任何字符结尾,但多条连续的语句之间必须用分号分隔,换行没有分隔语句的作用,
        分号可以分隔多条语句,但分号本身不是语句的组成部分,这体现在,复合语句中的最后一条语句末尾可以不加分号,
        但是,除了程序末尾,其他任何地方使用分号都是可以的,

变量
    变量分全局变量和属于过程的局部变量,
过程
    可以将过程类比为C语言中的函数,
    过程没有返回值和形参,参数传递通过全局变量实现,对应地,过程调用不需向过程传递参数,过程也不会返回返回值.
    对过程的调用必须使用关键字call
    过程调用本身不具有任何值,也就是,过程调用不能作为值赋给变量;

    所以,PI/O语言中,要实现过程之间的数据传递,只能借助全局变量.


关键字有
    CONST   VAR     procedure    begin    end
    if      call    while       do      read    
    write

字符有
    ,  ;
    + - * / 
    = # > >= < <= 

整个程序
    程序由五部分组成,这五个组件按符合C语言的风格描述就是,
        常量声明(包含赋值)
        变量声明(包含赋值)
        方法声明(包含方法体)
        一条语句
        . (一个据点)

    前三个组件是可选的,最后两个是必须的.
    除了过程说明部分,其余组件至多出现一次,至多出现一个;
    组件出现的顺序不能颠倒;
    前三个组件,如果出现,每个组件都用分号标志其结尾;
    一个常量声明可声明多个变量,变量之间用逗号分隔;
    一个变量声明可声明多个变量,变量之间用逗号分隔;
    过程说明是递归定义的,每个过程说明用分号且必须用分号结尾;
    语句不需要用任何符号结尾,但主程序只允许出现一条语句,虽然如此,但可以用复合语句组装多条语句,这时,语句之间必须用分号分隔(同时指出,最后一条语句末尾可以不用分号,也可以使用分号,使用分号的话,认为此分号的后面还有一条空语句);

其他
    此语言很简单,但功能是完备的.
    可与外界交互
    能进行算数运算和逻辑判断
    有顺序、分支、循环三种基本结构


--------------------------------------------------
只给出了文法,并没有给出对应的语义??

有理由做出如下推论
    赋值语句中的标识符都是被声明为变量的那些标识符(或者说,只对变量赋值)
    表达式其实就是无符号整数的加减乘除运算,没有过程调用,另外,运算中的无符号整数以常量或变量的形式给出,
